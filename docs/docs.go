// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/categories": {
            "get": {
                "description": "Get a list of all categories",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "Get all categories",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search insensitive by category name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit number of results (default: 10, limit: 100)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset for pagination (default: 0)",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of categories",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_sirawong_crud-arise_internal_handler_http_category_dto.Category"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error_code\": \"INTERNAL_ERROR\", \"message\": \"error\tdescription\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new category with the provided information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "Create a new category",
                "parameters": [
                    {
                        "description": "Category information",
                        "name": "category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_sirawong_crud-arise_internal_handler_http_category_dto.CategoryRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{\"status\": \"category_id\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "{\"error_code\": \"INVALID_ARGUMENT\", \"message\": \"error\tdescription\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "{\"error_code\": \"INTERNAL_ERROR\", \"message\": \"error\t\tdescription\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/categories/{id}": {
            "get": {
                "description": "Get a single category by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "Get a category by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category information",
                        "schema": {
                            "$ref": "#/definitions/github_com_sirawong_crud-arise_internal_handler_http_category_dto.Category"
                        }
                    },
                    "400": {
                        "description": "{\"error_code\": \"INVALID_ARGUMENT\", \"message\": \"error\tdescription\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "{\"error_code\": \"NOT_FOUND\", \"message\": \"error\t\t\tdescription\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "{\"error_code\": \"INTERNAL_ERROR\", \"message\": \"error\t\tdescription\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing category by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "Update a category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Category information",
                        "name": "category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_sirawong_crud-arise_internal_handler_http_category_dto.CategoryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"status\": \"updated\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "{\"error_code\": \"INVALID_ARGUMENT\", \"message\": \"error\tdescription\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "{\"error_code\": \"NOT_FOUND\", \"message\": \"error\t\t\tdescription\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "{\"error_code\": \"INTERNAL_ERROR\", \"message\": \"error\t\tdescription\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a category by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "Delete a category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"status\": \"deleted\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "{\"error_code\": \"INVALID_ARGUMENT\", \"message\": \"error\tdescription\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "{\"error_code\": \"NOT_FOUND\", \"message\": \"error\t\t\tdescription\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "{\"error_code\": \"INTERNAL_ERROR\", \"message\": \"error\t\tdescription\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/products": {
            "get": {
                "description": "Get a list of all products with optional filtering",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Get all products",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search insensitive by products name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by category ID",
                        "name": "categoryId",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Minimum price filter",
                        "name": "minPrice",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Maximum price filter",
                        "name": "maxPrice",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit number of results (default: 10, limit: 100)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset for pagination (default: 0)",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of products",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_sirawong_crud-arise_internal_handler_http_product_dto.Product"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error_code\": \"INTERNAL_ERROR\", \"message\": \"error\tdescription\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new product with the provided information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Create a new product",
                "parameters": [
                    {
                        "description": "Product creation information",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProductCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{\"id\": \"product_id\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "{\"error_code\": \"INVALID_ARGUMENT\", \"message\": \"error\tdescription\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "{\"error_code\": \"INTERNAL_ERROR\", \"message\": \"error\t\tdescription\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/products/{id}": {
            "get": {
                "description": "Get a single product by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Get a product by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product information",
                        "schema": {
                            "$ref": "#/definitions/github_com_sirawong_crud-arise_internal_handler_http_product_dto.Product"
                        }
                    },
                    "400": {
                        "description": "{\"error_code\": \"INVALID_ARGUMENT\", \"message\": \"error\tdescription\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "{\"error_code\": \"NOT_FOUND\", \"message\": \"error\t\t\tdescription\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "{\"error_code\": \"INTERNAL_ERROR\", \"message\": \"error\t\tdescription\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing product by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Update a product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Product update information",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_sirawong_crud-arise_internal_handler_http_product_dto.ProductUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"status\": \"updated\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "{\"error_code\": \"INVALID_ARGUMENT\", \"message\": \"error\tdescription\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "{\"error_code\": \"NOT_FOUND\", \"message\": \"error\t\t\tdescription\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "{\"error_code\": \"INTERNAL_ERROR\", \"message\": \"error\t\tdescription\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a product by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Delete a product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"status\": \"deleted\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "{\"error_code\": \"INVALID_ARGUMENT\", \"message\": \"error\tdescription\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "{\"error_code\": \"NOT_FOUND\", \"message\": \"error\t\t\tdescription\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "{\"error_code\": \"INTERNAL_ERROR\", \"message\": \"error\t\tdescription\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "ProductCreateRequest": {
            "type": "object",
            "required": [
                "categoryId",
                "description",
                "name",
                "sku"
            ],
            "properties": {
                "categoryId": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "imageUrl": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number",
                    "minimum": 0
                },
                "sku": {
                    "type": "string"
                },
                "stock": {
                    "type": "integer",
                    "minimum": 0
                }
            }
        },
        "github_com_sirawong_crud-arise_internal_handler_http_category_dto.Category": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "github_com_sirawong_crud-arise_internal_handler_http_category_dto.CategoryRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "github_com_sirawong_crud-arise_internal_handler_http_product_dto.Category": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "github_com_sirawong_crud-arise_internal_handler_http_product_dto.Product": {
            "type": "object",
            "properties": {
                "category": {
                    "$ref": "#/definitions/github_com_sirawong_crud-arise_internal_handler_http_product_dto.Category"
                },
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "imageUrl": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "sku": {
                    "type": "string"
                },
                "stock": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "github_com_sirawong_crud-arise_internal_handler_http_product_dto.ProductUpdateRequest": {
            "type": "object",
            "properties": {
                "categoryId": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "imageUrl": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "sku": {
                    "type": "string"
                },
                "stock": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Product Management API",
	Description:      "This is a product management server with categories.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
